app.cancellation.message.title=Your reservation from {departureDate} to {returnDate} has been canceled.
app.cancellation.message.text = Please feel free to check out our other car models
app.confirmation.message.title=Your reservation from {departureDate} to {returnDate} has been confirmed.
app.confirmation.message.text = Thank you for your reservation

# Java SSL TrustStore - utiliser une variable d'environnement pour la localisation et le mot de passe
javax.net.ssl.trustStore=${SSL_TRUSTSTORE}
javax.net.ssl.trustStorePassword=${SSL_TRUSTSTORE_PASSWORD}

# Configuration de la base de donn√©es - remplacer par des variables d'environnement
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Add logging configs to display SQL statements
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# Configure JPA/Hibernate for table auto creation
spring.jpa.hibernate.ddl_auto=update

# Logging for Spring Security
logging.level.org.springframework.security=DEBUG

# OAuth2 Configuration - Google (replace the actual p)

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Spring Mail Configuration - utiliser des variables d'environnement pour l'email et le mot de passe
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Contact email
contact.email.issuer=${CONTACT_EMAIL_ISSUER}
